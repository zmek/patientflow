[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "zella.king@ucl.ac.uk", name = "Zella King"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
description = "Code and explanatory notebooks for predicting short-term hospital bed capacity using real-time data"
dynamic = [
    "dependencies",
    "version",
]
keywords = []
name = "patientflow"
optional-dependencies = {dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "tox",
    "twine",
], docs = [
    "griffe==0.36.2",
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings-python==1.7.0",
    "mkdocstrings==0.24.0",
    "nbconvert",
], test = [
    "pytest",
    "pytest-cov",
    "pyyaml",
]}
readme = "README.md"
requires-python = ">=3.10"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/zmek/patientflow"

[tool.coverage]
report = {sort = "cover"}
run = {branch = true, parallel = true, source = [
    "patientflow",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--import-mode=importlib",
    "--verbose",
]
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
lint.ignore = []
lint.per-file-ignores = {"tests*" = [
    "INP001", # File is part of an implicit namespace package.
    "S101", # Use of `assert` detected
]}
lint.select = ["E4", "E7", "E9", "F"]
lint.isort.known-first-party = [
    "patientflow",
]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/patientflow/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.10: py310
        3.11: py311
        3.12: py312

    [testenv]
    commands =
        pytest --cov --cov-report=xml
    extras =
        test

    [testenv:docs]
    commands =
        jupyter nbconvert {toxinidir}/notebooks/*.ipynb --to markdown --output-dir={toxinidir}/docs/notebooks
        python {toxinidir}/docs/notebooks/update_notebook_links.py {toxinidir}/docs/notebooks
        mkdocs build
    extras =
        docs

    [tox]
    env_list =
        py310
        py311
        py312
"""
